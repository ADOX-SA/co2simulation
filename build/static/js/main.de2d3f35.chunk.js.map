{"version":3,"sources":["context/room-context.jsx","assets/students/Estudiante10.svg","assets/students/Estudiante8.svg","assets/students/Estudiante7.svg","assets/students/Estudiante6.svg","assets/students/Estudiante5.svg","assets/students/Estudiante4.svg","assets/students/Estudiante3.svg","assets/students/Estudiante2.svg","assets/people/Teacher.svg","assets/furniture/TeacherDesk.svg","assets/furniture/Bookshelf.svg","assets/masks/BarbijoDeTela.svg","assets/masks/BarbijoQuirurgico.svg","assets/masks/BarbijoKN95.svg","assets/ventilation/VentCerradaD.svg","assets/ventilation/VentParcialD.svg","assets/ventilation/VentAbiertaD.svg","assets/ventilation/VentSystemD.svg","components/Simulator/components/Room.js","assets/masks/SelBarbijoNO.svg","assets/masks/SelBarbijoTela.svg","assets/masks/SelBarbijoQuirurgico.svg","assets/masks/SelBarbijoKN95.svg","assets/ventilation/SelVentCerrada.svg","assets/ventilation/SelVentParcial.svg","assets/ventilation/SelVentAbierta.svg","assets/ventilation/SelVentSystem.svg","components/Simulator/components/Parameters.js","assets/sensor/Sensor.svg","assets/sensor/SensorNormal.svg","assets/sensor/SensorAlto.svg","assets/sensor/SensorPeligro.svg","components/Simulator/components/Results.js","components/Simulator/index.js","components/Header/index.js","pages/Mainpage.js","App.js","index.js"],"names":["RoomContext","React","createContext","RoomProvider","props","useState","teachers","people","infecteds","maskEfficiency","maskPopulation","duration","ventilation","firstOrderLoss","totalCO2ExhaladoPMinuto","totalCO2ExhaladoPSegundo","totalCO2Ambiente","roomHeight","roomWidth","roomLarge","roomVolumeM3","co2Exterior","infectedExhalation","netEmissionRate","avrConcentrationOfQuantas","InhaledQuantasByPerson","infectionProbability","room","setRoom","updateAvrConcentrationOfQuantasNER","newNER","newMask","newACQ","Math","exp","console","log","updateInhaledQuantasByPerson","undefined","newDuration","newInhaledQuantasByPerson","totalCO2","updateTotalCO2AmbienteDURATION","value","updateAvrConcentrationOfQuantasVENT","ventRate","NEWfirstOrderLoss","updateTotalCO2AmbienteVENT","updateAvrConcentrationOfQuantasDURATION","updateNetEmissionRateMASK","useEffect","Provider","useRoom","context","useContext","Error","Room","className","Grid","Walls","Shelf","StudentDesk","tipo","Student6","Student2","Student3","Student4","Student5","Student7","Student8","inf","Student10","Vent","vent","ventType","src","VentCerradaD","alt","VentParcialD","VentAbiertaD","VentSystemD","getVentType","Biblioteca","Mask","maskType","BarbijoDeTela","BarbijoQuirurgico","BarbijoKN95","getMaskType","Teacher","Profesora","TeacherDesk","EscritorioProfesora","Parameters","DurationSlider","min","max","label","unit","MaskSelector","VentilationSelector","type","onChange","e","target","active","setActive","handleClick","id","maskEff","onClick","MaskBtn","SelBarbijoNO","SelBarbijoTela","SelBarbijoQuirurgico","SelBarbijoKN95","VentBtn","SelVentCerrada","SelVentParcial","SelVentAbierta","SelVentSystem","Results","parseInt","parseFloat","toFixed","Sensor","ppm","sensorNormal","sensorAlto","sensorPeligro","sensor","cambiarMedidor","Simulator","MainContainer","Header","Mainpage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de2d3f35.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst RoomContext = React.createContext();\n\nexport function RoomProvider(props) {\n  // Efectividad de las mascarillas\n  // NO: 0\n  // TELA: 0.5\n  // QUIRURGICO: 0.65\n  // N95: 0.9\n\n  // Tasa de exhalación por minuto\n  // ALUMNO: 0.24636\n  // PROFESOR: 0.36812\n\n  // Renovaciones de aire por hora\n  // CERRADA: 0.1\n  // PARCIAL: 3\n  // ABIERTA: 5\n  // SISTEMA: 7\n\n  // Medidas de la habitación\n  // ALTO: 2.4\n  // ANCHO: 6\n  // LARGO: 10\n\n  // Propiedades del ambiente\n  const [room, setRoom] = useState({\n    teachers: 1,\n    people: 12,\n    infecteds: 1,\n    maskEfficiency: 0, // 0 | 0.5 | 0.65 | 0.9\n    maskPopulation: 1, // Fracción de personas con máscara. Asumimos un 100%\n    duration: 1,\n    ventilation: 0.1, // Renovaciones de aire por hora: 7 | 5 | 3 | 0.1\n    firstOrderLoss: 1.02, // ventilation + 0.92 // ? Averiguar esto\n    totalCO2ExhaladoPMinuto: 3.32444, // teachers * 0.36812 + people * 0.24636\n    totalCO2ExhaladoPSegundo: 0.05540733333, // anterior pero en litros por segundo\n    totalCO2Ambiente: 1085,\n    roomHeight: 2.4,\n    roomWidth: 6,\n    roomLarge: 10,\n    roomVolumeM3: 144, // Volumen en metros cúbicos\n    co2Exterior: 415, // Calibración exterior\n    infectedExhalation: 60, // Tasa de exhalación sentado y hablando fuerte\n    netEmissionRate: 60, // Tasa de emisión neta\n    avrConcentrationOfQuantas: 0.1524233228, // Concentración media de quantas\n    InhaledQuantasByPerson: 0.07926012787, // Quantas inhaladas por persona\n    infectionProbability: 7.52,\n  });\n\n  // ============================ FUNCIONES PARA REALIZACIÓN DE CÁLCULOS ======================\n\n  function updateAvrConcentrationOfQuantasVENT(ventRate) {\n    const { netEmissionRate, roomVolumeM3, duration } = room;\n    const NEWfirstOrderLoss = ventRate + 0.92; // ? Averiguar si esto está bien\n\n    const avrConcentrationOfQuantas =\n      (netEmissionRate / NEWfirstOrderLoss / roomVolumeM3) *\n      (1 -\n        (1 / NEWfirstOrderLoss / duration) *\n          (1 - Math.exp(-NEWfirstOrderLoss * duration)));\n\n    setRoom({\n      ...room,\n      ventilation: ventRate,\n      avrConcentrationOfQuantas: avrConcentrationOfQuantas,\n      firstOrderLoss: NEWfirstOrderLoss,\n    });\n    updateInhaledQuantasByPerson(avrConcentrationOfQuantas);\n    updateTotalCO2AmbienteVENT(ventRate);\n  }\n\n  // FUNCIONES PARA ACTUALIZAR LA CONCENTRACIÓN MEDIA DE QUANTAS //////////////////\n  // Actualización gral.\n  function updateAvrConcentrationOfQuantasNER(newNER, newMask) {\n    const { roomVolumeM3, firstOrderLoss, duration } = room;\n    const newACQ =\n      (newNER / firstOrderLoss / roomVolumeM3) *\n      (1 -\n        (1 / firstOrderLoss / duration) *\n          (1 - Math.exp(-firstOrderLoss * duration)));\n\n    console.log(newMask);\n\n    setRoom({\n      ...room,\n      avrConcentrationOfQuantas: newACQ,\n    });\n    var _ = undefined;\n    updateInhaledQuantasByPerson(newACQ, _, newNER, newMask);\n  }\n\n  // Actualización por cambio de duración\n  function updateAvrConcentrationOfQuantasDURATION(newDuration) {\n    const { netEmissionRate, roomVolumeM3, firstOrderLoss } = room;\n\n    const avrConcentrationOfQuantas =\n      (netEmissionRate / firstOrderLoss / roomVolumeM3) *\n      (1 -\n        (1 / firstOrderLoss / newDuration) *\n          (1 - Math.exp(-firstOrderLoss * newDuration)));\n\n    updateInhaledQuantasByPerson(avrConcentrationOfQuantas, newDuration);\n    updateTotalCO2AmbienteDURATION(newDuration);\n  }\n\n  // Actualización por cambio de máscara\n  function updateNetEmissionRateMASK(newMask) {\n    const { infectedExhalation, maskPopulation, infecteds } = room;\n\n    const netEmissionRate =\n      infectedExhalation * (1 - newMask * maskPopulation) * infecteds;\n\n    updateAvrConcentrationOfQuantasNER(netEmissionRate, newMask);\n  }\n\n  // FUNCIONES PARA CALCULAR QUANTAS INHALADAS POR PERSONA ///////////////////////\n  // Actualización por cambio de ACQ\n  function updateInhaledQuantasByPerson(newACQ, newDuration, newNER, newMask) {\n    const { duration, maskEfficiency, maskPopulation } = room;\n\n    if (newDuration) {\n      console.log(\"Existe duracion\");\n      const newInhaledQuantasByPerson =\n        newACQ * 0.52 * newDuration * (1 - maskEfficiency * maskPopulation);\n      const infectionProbability =\n        (1 - Math.exp(-newInhaledQuantasByPerson)) * 100;\n\n      const totalCO2 = updateTotalCO2AmbienteDURATION(newDuration);\n\n      setRoom({\n        ...room,\n        InhaledQuantasByPerson: newInhaledQuantasByPerson,\n        duration: newDuration,\n        avrConcentrationOfQuantas: newACQ,\n        infectionProbability: infectionProbability,\n        totalCO2Ambiente: totalCO2,\n      });\n    } else {\n      console.log(\"NO existe duracion\");\n\n      const newInhaledQuantasByPerson =\n        newACQ * 0.52 * duration * (1 - newMask * maskPopulation);\n\n      const infectionProbability =\n        (1 - Math.exp(-newInhaledQuantasByPerson)) * 100;\n\n      setRoom({\n        ...room,\n        InhaledQuantasByPerson: newInhaledQuantasByPerson,\n        avrConcentrationOfQuantas: newACQ,\n        infectionProbability: infectionProbability,\n        netEmissionRate: newNER,\n        maskEfficiency: newMask,\n      });\n    }\n  }\n\n  // FUNCIONES PARA ACTUALIZAR TOTAL CO2 EN AMBIENTE /////////////////////////////\n  // Actualización por cambio de ventilacion\n  function updateTotalCO2AmbienteVENT(ventRate) {\n    const { totalCO2ExhaladoPSegundo, roomVolumeM3, duration, co2Exterior } =\n      room;\n\n    const totalCO2 =\n      ((totalCO2ExhaladoPSegundo * 3.6) / ventRate / roomVolumeM3) *\n        (1 - (1 / ventRate / duration) * (1 - Math.exp(-ventRate * duration))) *\n        1000000 +\n      co2Exterior;\n\n    setRoom({ ...room, totalCO2Ambiente: totalCO2, ventilation: ventRate });\n  }\n\n  // Actualización por cambio de duracion\n  function updateTotalCO2AmbienteDURATION(newDuration) {\n    const { totalCO2ExhaladoPSegundo, roomVolumeM3, ventilation, co2Exterior } =\n      room;\n\n    return (\n      ((totalCO2ExhaladoPSegundo * 3.6) / ventilation / roomVolumeM3) *\n        (1 -\n          (1 / ventilation / newDuration) *\n            (1 - Math.exp(-ventilation * newDuration))) *\n        1000000 +\n      co2Exterior\n    );\n  }\n\n  // ================================== RETORNO DEL OBJETO ===================================\n  // Valor de retorno\n  const value = {\n    room,\n    setRoom,\n    updateAvrConcentrationOfQuantasNER,\n    updateAvrConcentrationOfQuantasVENT,\n    updateAvrConcentrationOfQuantasDURATION,\n    updateNetEmissionRateMASK,\n    updateInhaledQuantasByPerson,\n  };\n\n  useEffect(() => {\n    console.log(room);\n  });\n\n  return <RoomContext.Provider value={value} {...props} />;\n}\n\nexport function useRoom() {\n  const context = React.useContext(RoomContext);\n  if (!context) {\n    throw new Error(\"useRoom debe estar dentro del proveedor RoomContext\");\n  }\n  return context;\n}\n","export default __webpack_public_path__ + \"static/media/Estudiante10.4427dc84.svg\";","export default __webpack_public_path__ + \"static/media/Estudiante8.00c6f422.svg\";","export default __webpack_public_path__ + \"static/media/Estudiante7.2de939df.svg\";","export default __webpack_public_path__ + \"static/media/Estudiante6.b7d71359.svg\";","export default __webpack_public_path__ + \"static/media/Estudiante5.525c694b.svg\";","export default __webpack_public_path__ + \"static/media/Estudiante4.ea653e95.svg\";","export default __webpack_public_path__ + \"static/media/Estudiante3.e311d1b6.svg\";","export default __webpack_public_path__ + \"static/media/Estudiante2.1fb01330.svg\";","export default __webpack_public_path__ + \"static/media/Teacher.e452ae2f.svg\";","export default __webpack_public_path__ + \"static/media/TeacherDesk.57db871a.svg\";","export default __webpack_public_path__ + \"static/media/Bookshelf.57b98b4a.svg\";","export default __webpack_public_path__ + \"static/media/BarbijoDeTela.47da2baa.svg\";","export default __webpack_public_path__ + \"static/media/BarbijoQuirurgico.0579a8ca.svg\";","export default __webpack_public_path__ + \"static/media/BarbijoKN95.5143a7dd.svg\";","export default __webpack_public_path__ + \"static/media/VentCerradaD.d59c065c.svg\";","export default __webpack_public_path__ + \"static/media/VentParcialD.755553db.svg\";","export default __webpack_public_path__ + \"static/media/VentAbiertaD.d3fe3912.svg\";","export default __webpack_public_path__ + \"static/media/VentSystemD.16fd7dff.svg\";","import React from \"react\";\nimport { useRoom } from \"../../../context/room-context\";\n\n// Imported assets ========================\n\nimport Student10 from \"../../../assets/students/Estudiante10.svg\";\n//import Student9 from \"../../../assets/students/Estudiante9.svg\";\nimport Student8 from \"../../../assets/students/Estudiante8.svg\";\nimport Student7 from \"../../../assets/students/Estudiante7.svg\";\nimport Student6 from \"../../../assets/students/Estudiante6.svg\";\nimport Student5 from \"../../../assets/students/Estudiante5.svg\";\nimport Student4 from \"../../../assets/students/Estudiante4.svg\";\nimport Student3 from \"../../../assets/students/Estudiante3.svg\";\nimport Student2 from \"../../../assets/students/Estudiante2.svg\";\n//import Student1 from \"../../../assets/students/Estudiante1.svg\";\n//import Student0 from \"../../../assets/students/Estudiante0.svg\";\nimport Profesora from \"../../../assets/people/Teacher.svg\";\nimport EscritorioProfesora from \"../../../assets/furniture/TeacherDesk.svg\";\nimport Biblioteca from \"../../../assets/furniture/Bookshelf.svg\";\nimport BarbijoDeTela from \"../../../assets/masks/BarbijoDeTela.svg\";\nimport BarbijoQuirurgico from \"../../../assets/masks/BarbijoQuirurgico.svg\";\nimport BarbijoKN95 from \"../../../assets/masks/BarbijoKN95.svg\";\nimport VentCerradaD from \"../../../assets/ventilation/VentCerradaD.svg\";\nimport VentParcialD from \"../../../assets/ventilation/VentParcialD.svg\";\nimport VentAbiertaD from \"../../../assets/ventilation/VentAbiertaD.svg\";\nimport VentSystemD from \"../../../assets/ventilation/VentSystemD.svg\";\n\n// ========================================\n\nexport default function Room(room) {\n  return (\n    <div className=\"room-container\">\n      <div className=\"room\">\n        <div className=\"room-floor floor-shadow\">\n          <Grid room={room} />\n          <Walls />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Grid(room) {\n  return (\n    <div className=\"room-grid\">\n      <Shelf />\n      <StudentDesk tipo={Student6} />\n      <StudentDesk tipo={Student2} />\n      <StudentDesk tipo={Student3} />\n      <Teacher />\n      <StudentDesk tipo={Student4} />\n      <StudentDesk tipo={Student5} />\n      <StudentDesk tipo={Student6} />\n      <StudentDesk tipo={Student7} />\n      <StudentDesk tipo={Student8} inf={1} />\n      <StudentDesk tipo={Student3} />\n      <TeacherDesk />\n      <StudentDesk tipo={Student10} />\n      <StudentDesk tipo={Student2} />\n      <StudentDesk tipo={Student5} />\n    </div>\n  );\n}\n\nfunction Walls() {\n  const { room } = useRoom();\n\n  return (\n    <>\n      <div className=\"left-wall wall\">\n        <Vent vent={room.ventilation} />\n      </div>\n      <div className=\"right-wall wall\"></div>\n    </>\n  );\n}\n\nfunction Vent(props) {\n  function getVentType(ventType) {\n    switch (ventType) {\n      default:\n      case 0.1:\n        return (\n          <img\n            className=\"window-closed\"\n            src={VentCerradaD}\n            alt=\"Ventilación\"\n          ></img>\n        );\n      case 3:\n        return (\n          <img\n            className=\"window-parcial\"\n            src={VentParcialD}\n            alt=\"Ventilación\"\n          ></img>\n        );\n      case 5:\n        return (\n          <img\n            className=\"window-open\"\n            src={VentAbiertaD}\n            alt=\"Ventilación\"\n          ></img>\n        );\n      case 7:\n        return (\n          <img\n            className=\"window-system\"\n            src={VentSystemD}\n            alt=\"Ventilación\"\n          ></img>\n        );\n    }\n  }\n  return (\n    <div className=\"window-container window-wrapper\">\n      {getVentType(props.vent)}\n    </div>\n  );\n}\n\nfunction Shelf() {\n  return (\n    <div className=\"iso-element\">\n      <div className=\"shelf-wrapper\">\n        <img src={Biblioteca} alt=\"Biblioteca\" />\n      </div>\n    </div>\n  );\n}\n\nfunction StudentDesk(props) {\n  const { room } = useRoom();\n\n  return (\n    <div\n      className={props.inf === 1 ? \"iso-element iso-infected\" : \"iso-element\"}\n    >\n      <div className=\"iso-box\">\n        <div className=\"student-wrapper\">\n          <Mask maskType={room.maskEfficiency} />\n          <img src={props.tipo} alt=\"Estudiante\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Mask(props) {\n  function getMaskType(maskType) {\n    switch (maskType) {\n      case 0.5:\n        return <img className=\"mask\" src={BarbijoDeTela} alt=\"Barbijo\"></img>;\n      case 0.65:\n        return (\n          <img className=\"mask\" src={BarbijoQuirurgico} alt=\"Barbijo\"></img>\n        );\n      case 0.9:\n        return <img className=\"mask\" src={BarbijoKN95} alt=\"Barbijo\"></img>;\n      case 0:\n      default:\n        return <></>;\n    }\n  }\n  return getMaskType(props.maskType);\n}\n\nfunction Teacher() {\n  return (\n    <div className=\"iso-element doble\">\n      <div className=\"people-wrapper\">\n        <img src={Profesora} alt=\"Profesora\" />\n      </div>\n    </div>\n  );\n}\nfunction TeacherDesk() {\n  return (\n    <div className=\"iso-element\">\n      <div className=\"iso-box\">\n        <div className=\"desk-wrapper\">\n          <img src={EscritorioProfesora} alt=\"Escritorio de profesora\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/SelBarbijoNO.1162548f.svg\";","export default __webpack_public_path__ + \"static/media/SelBarbijoTela.a9905117.svg\";","export default __webpack_public_path__ + \"static/media/SelBarbijoQuirurgico.d04e8b43.svg\";","export default __webpack_public_path__ + \"static/media/SelBarbijoKN95.55b33fef.svg\";","export default __webpack_public_path__ + \"static/media/SelVentCerrada.857609f6.svg\";","export default __webpack_public_path__ + \"static/media/SelVentParcial.86030093.svg\";","export default __webpack_public_path__ + \"static/media/SelVentAbierta.48943e80.svg\";","export default __webpack_public_path__ + \"static/media/SelVentSystem.192b4bad.svg\";","import React, { useState } from \"react\";\nimport { useRoom } from \"../../../context/room-context\";\n\n// Imported assets\n// Barbijos\nimport SelBarbijoNO from \"../../../assets/masks/SelBarbijoNO.svg\";\nimport SelBarbijoTela from \"../../../assets/masks/SelBarbijoTela.svg\";\nimport SelBarbijoQuirurgico from \"../../../assets/masks/SelBarbijoQuirurgico.svg\";\nimport SelBarbijoKN95 from \"../../../assets/masks/SelBarbijoKN95.svg\";\n// ventilación\nimport SelVentCerrada from \"../../../assets/ventilation/SelVentCerrada.svg\";\nimport SelVentParcial from \"../../../assets/ventilation/SelVentParcial.svg\";\nimport SelVentAbierta from \"../../../assets/ventilation/SelVentAbierta.svg\";\nimport SelVentSystem from \"../../../assets/ventilation/SelVentSystem.svg\";\n\nexport default function Parameters() {\n  return (\n    <div className=\"room-parameters\">\n      <div className=\"parameters-header\">\n        <h5 className=\"parameters-title\">Parámetros del ambiente</h5>\n      </div>\n      <div className=\"controllers-div\">\n        {/* <PeopleSlider min={1} max={12} label=\"personas\" /> */}\n        <DurationSlider min={1} max={9} label=\"duración\" unit=\"hr\" />\n        <MaskSelector />\n        <VentilationSelector />\n      </div>\n    </div>\n  );\n}\n\n/* function PeopleSlider({ min, max, label, unit }) {\n  const { room, setRoom } = useRoom();\n\n  const handleOnChange = (e) => {\n    setRoom({ ...room, people: e.target.value });\n  };\n\n  return (\n    <div className=\"range shadow\">\n      <div className=\"slider-info\">\n        <span className=\"slider-value\">\n          {room.people}\n          {unit}\n        </span>\n        <span className=\"slider-label\">{label}</span>\n      </div>\n      <div className=\"field\">\n        <input\n          type=\"range\"\n          min={min}\n          max={max}\n          value={room.people}\n          onChange={handleOnChange}\n        />\n      </div>\n    </div>\n  );\n} */\n\nfunction DurationSlider({ min, max, label, unit }) {\n  const { room, updateAvrConcentrationOfQuantasDURATION } = useRoom();\n\n  const handleOnChange = (e) => {\n    updateAvrConcentrationOfQuantasDURATION(e.target.value);\n  };\n\n  return (\n    <>\n      <h5 className=\"slider-title\">Duración de permanencia en ambiente:</h5>\n      <div className=\"range shadow\">\n        <div className=\"slider-info\">\n          <span className=\"slider-value\">\n            {room.duration}\n            {unit}\n          </span>\n          <span className=\"slider-label\">{label}</span>\n        </div>\n        <div className=\"field\">\n          <input\n            type=\"range\"\n            min={min}\n            max={max}\n            value={room.duration}\n            onChange={handleOnChange}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction MaskSelector() {\n  const [active, setActive] = useState(0);\n  const { updateNetEmissionRateMASK } = useRoom();\n\n  const handleClick = (id) => {\n    var maskEff;\n\n    setActive(id);\n    switch (id) {\n      default:\n      case 0:\n        maskEff = 0;\n        break;\n      case 1:\n        maskEff = 0.5;\n        break;\n      case 2:\n        maskEff = 0.65;\n        break;\n      case 3:\n        maskEff = 0.9;\n        break;\n    }\n    updateNetEmissionRateMASK(maskEff);\n  };\n\n  return (\n    <div className=\"mask-selector-div\">\n      <h5>Selector de barbijo:</h5>\n      <ol>\n        <li\n          className={0 === active ? \"btn-selected\" : null}\n          onClick={() => handleClick(0)}\n        >\n          <MaskBtn src={SelBarbijoNO} label=\"Ninguno\" id={0} />\n        </li>\n        <li\n          className={1 === active ? \"btn-selected\" : null}\n          onClick={() => handleClick(1)}\n        >\n          <MaskBtn src={SelBarbijoTela} label=\"De tela\" id={1} />\n        </li>\n        <li\n          className={2 === active ? \"btn-selected\" : null}\n          onClick={() => handleClick(2)}\n        >\n          <MaskBtn src={SelBarbijoQuirurgico} label=\"Quirúrgico\" id={2} />\n        </li>\n        <li\n          className={3 === active ? \"btn-selected\" : null}\n          onClick={() => handleClick(3)}\n        >\n          <MaskBtn src={SelBarbijoKN95} label=\"N95\" id={3} />\n        </li>\n      </ol>\n    </div>\n  );\n}\n\nfunction MaskBtn(props) {\n  return (\n    <div>\n      <img src={props.src} alt=\"Selector de barbijo\"></img>\n      <p>{props.label}</p>\n    </div>\n  );\n}\n\nfunction VentilationSelector() {\n  const [active, setActive] = useState(0.1);\n  const { updateAvrConcentrationOfQuantasVENT } = useRoom();\n\n  const handleClick = (ventRate) => {\n    updateAvrConcentrationOfQuantasVENT(ventRate);\n\n    setActive(ventRate);\n  };\n\n  return (\n    <div className=\"mask-selector-div\">\n      <h5>Selector de ventilación:</h5>\n      <ol>\n        <li\n          className={0.1 === active ? \"btn-selected\" : null}\n          onClick={() => handleClick(0.1)}\n        >\n          <VentBtn src={SelVentCerrada} label=\"Ninguna\" id={0} />\n        </li>\n        <li\n          className={3 === active ? \"btn-selected\" : null}\n          onClick={() => handleClick(3)}\n        >\n          <VentBtn src={SelVentParcial} label=\"Parcial\" id={1} />\n        </li>\n        <li\n          className={5 === active ? \"btn-selected\" : null}\n          onClick={() => handleClick(5)}\n        >\n          <VentBtn src={SelVentAbierta} label=\"Total\" id={2} />\n        </li>\n        <li\n          className={7 === active ? \"btn-selected\" : null}\n          onClick={() => handleClick(7)}\n        >\n          <VentBtn src={SelVentSystem} label=\"Sistema\" id={3} />\n        </li>\n      </ol>\n    </div>\n  );\n}\n\nfunction VentBtn(props) {\n  return (\n    <div>\n      <img src={props.src} alt=\"Selector de ventilación\"></img>\n      <p>{props.label}</p>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Sensor.02a692fe.svg\";","export default __webpack_public_path__ + \"static/media/SensorNormal.c078f429.svg\";","export default __webpack_public_path__ + \"static/media/SensorAlto.37c94170.svg\";","export default __webpack_public_path__ + \"static/media/SensorPeligro.b9c29bb2.svg\";","import React from \"react\";\nimport { useRoom } from \"../../../context/room-context\";\n\n// Imported assets\nimport sensor from \"../../../assets/sensor/Sensor.svg\";\nimport sensorNormal from \"../../../assets/sensor/SensorNormal.svg\";\nimport sensorAlto from \"../../../assets/sensor/SensorAlto.svg\";\nimport sensorPeligro from \"../../../assets/sensor/SensorPeligro.svg\";\n\nexport default function Results() {\n  const { room } = useRoom();\n\n  return (\n    <div className=\"results-card\">\n      <div className=\"results-header\">\n        <h3 className=\"results-title\">Resultados</h3>\n      </div>\n      <div className=\"results-wrapper\">\n        <div>\n          <div className=\"ppm-card\">\n            <h5 className=\"results-subtitle\">\n              Total CO<sub>2</sub> presente en el ambiente (partes por millón):\n            </h5>\n            <h1\n              className={\n                room.totalCO2Ambiente < 800\n                  ? \"ppmOK results-ppm\"\n                  : room.totalCO2Ambiente >= 800 && room.totalCO2Ambiente < 1400\n                  ? \"ppmAlto results-ppm\"\n                  : \"ppmPeligro results-ppm\"\n              }\n            >\n              {parseInt(room.totalCO2Ambiente)} ppm\n            </h1>\n          </div>\n          <div className=\"ppm-card\">\n            <h5 className=\"results-subtitle\">\n              Probabilidad de contagio por persona (%):\n            </h5>\n            <h1 className=\"results-ppm\">\n              {parseFloat(room.infectionProbability).toFixed(2)} %\n            </h1>\n          </div>\n        </div>\n        <Sensor />\n      </div>\n    </div>\n  );\n}\n\nfunction Sensor() {\n  const { room } = useRoom();\n\n  function cambiarMedidor(ppm) {\n    var selector = 0;\n    ppm < 800\n      ? (selector = 0)\n      : ppm >= 800 && ppm < 1400\n      ? (selector = 1)\n      : (selector = 2);\n\n    switch (selector) {\n      case 0:\n        return (\n          <img className=\"sensor-img\" src={sensorNormal} alt=\"Sensor\"></img>\n        );\n      case 1:\n        return <img className=\"sensor-img\" src={sensorAlto} alt=\"Sensor\"></img>;\n      case 2:\n        return (\n          <img className=\"sensor-img\" src={sensorPeligro} alt=\"Sensor\"></img>\n        );\n      default:\n        return <img className=\"sensor-img\" src={sensor} alt=\"Sensor\"></img>;\n    }\n  }\n\n  return (\n    <div className=\"sensor-div\">\n      <span className=\"screen-result\">\n        {parseInt(room.totalCO2Ambiente)} ppm\n      </span>\n      {cambiarMedidor(room.totalCO2Ambiente)}\n      <h4>\n        Medidor de CO<sub>2</sub>\n      </h4>\n    </div>\n  );\n}\n","import React from \"react\";\n\n// Import context\nimport { RoomProvider } from \"../../context/room-context\";\n\n// Imported components\nimport Room from \"./components/Room\";\nimport Parameters from \"./components/Parameters\";\nimport Results from \"./components/Results\";\n\nexport default function Simulator() {\n  return (\n    <div>\n      <RoomProvider>\n        <MainContainer />\n      </RoomProvider>\n    </div>\n  );\n}\n\nfunction MainContainer() {\n  return (\n    <>\n      <div className=\"wrapper\">\n        <Room />\n        <Parameters />\n      </div>\n      <Results />\n    </>\n  );\n}\n\n// Personas ============================================\n","import React from \"react\";\n\nexport default function Header() {\n  return (\n    <div className=\"menu\">\n      <h1>\n        Simulador de riesgo de contagio por aerosoles en ambientes cerrados\n      </h1>\n      <p className=\"header-text\">\n        Siempre que las personas se reúnen en espacios cerrados, el riesgo de\n        infección aumenta. Nuestra herramienta interactiva muestra cómo se\n        propaga el <b>COVID-19</b>.\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\n\n// Imported components\nimport Simulator from \"../components/Simulator\";\nimport Header from \"../components/Header\";\n\nexport default function Mainpage() {\n  return (\n    <div>\n      <Header />\n      <Simulator />\n    </div>\n  );\n}\n","import \"./App.css\";\nimport \"./sass/main.css\";\n\n// Imported pages\nimport Mainpage from \"./pages/Mainpage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <Mainpage />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}